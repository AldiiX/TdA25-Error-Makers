@using System.Text.Json
@using TdA25_Error_Makers
@using TdA25_Error_Makers.Classes
@using TdA25_Error_Makers.Classes.Objects
@{
    if (ViewBag.Game is not MultiplayerGame game) {
        throw new Exception("Game is null");
        return;
    }

    var loggedAccount = ViewBag.Account as Account;

    // komponenty
    var headerComponent = Html.PartialAsync("/Views/Components/Header.cshtml");
    var footerComponent = Html.PartialAsync("/Views/Components/Footer.cshtml");
    var backgroundComponent = Html.PartialAsync("/Views/Components/ColoredBackground.cshtml");
    var backgroundBlur = Html.PartialAsync("/Views/Components/BlurBackground.cshtml");
    var confetti = Html.PartialAsync("/Views/Components/Confetti.cshtml");
    var announcements = Html.PartialAsync("/Views/Components/AnnouncementsMain.cshtml");
    var surrenderModal = Html.PartialAsync("/Views/Components/Modals/Surrender.cshtml");
}
<!doctype html>
<html lang="en" ontouchmove>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" href="/libs/purecss.css">
    <link rel="stylesheet" href="/css/game.css?ver=@Program.ENV.GetValueOrNull("CACHE_VERSION")">
    <link rel="stylesheet" href="/css/mainstyles.css?ver=@Program.ENV.GetValueOrNull("CACHE_VERSION")">
    <link rel="stylesheet" href="@Utilities.WebTheme.GetCSSFile()" id="webtheme-link">

    @{ // Vue.js definice
        if (Program.DEVELOPMENT_MODE) {
            <script src="/libs/vue_dev.js"></script>
        } else {
            <script src="/libs/vue.js"></script>
        }
    }



    <title>Ranked Hra • Think Different Academy</title>

    @*  scripty pro komponenty *@
    <script src="/scripts/components/header.js"></script>
</head>
<body id="GAME-PAGE" oncontextmenu="return false">
    <div id="app">
        @await backgroundBlur
        @await announcements
        @await surrenderModal


        <div v-show="gameLoaded">
            @await backgroundComponent
        </div>

        @await headerComponent
        <div class="mainsection">

            <!-- confetti při výhře -->
            <div v-if="game && gameLoaded && game?.winner && finishGameObject?.result === 'win'" v-cloak>
                @await confetti
            </div>

            <!-- div který se ukaze pred nactenim -->
            <div class="loading" v-show="!gameLoaded">
                <div class="img"></div>
                <h1 v-if="false">Načítá se hra</h1>
                <h1 v-else-if="gameNumberOfPlayers < 2" v-cloak>Čeká se na druhého hráče</h1>
                <h1 v-else v-cloak>Načítá se herní plocha</h1>
                <p>... připravte se na pořádný piškvorkový zápas! :) ...</p>
            </div>


            <div class="endgame" v-show="gameFazeIsEnding" v-cloak>
                <div class="content">
                    <p>Výsledek hry</p>
                    <h1 class="win" v-if="finishGameObject?.result === 'win' || game?.result === 'win'">Výhra</h1>
                    <h1 class="lose" v-else-if="finishGameObject?.result === 'lose'  || game?.result === 'lose'">Prohra</h1>
                    <h1 class="draw" v-else>Remíza</h1>

                    <div class="randominfo">
                        <div class="elo" v-if="game?.type === 'RANKED' && finishGameObject && finishGameObject?.elo && finishGameObject?.oldElo">
                            <p class="txt">ELO</p>
                            <div class="elo-display">
                                <p class="mark">{{ (finishGameObject?.elo - finishGameObject?.oldElo) >= 0 ? "+" : "-" }}</p>
                                <h2 class="number">{{ Math.abs(finishGameObject?.elo - finishGameObject?.oldElo) }}</h2>
                                <div v-bind:class="['arrow', { 'plus': (finishGameObject?.elo - finishGameObject?.oldElo) >= 0, 'minus': (finishGameObject?.elo - finishGameObject?.oldElo) < 0 } ]"></div>
                            </div>
                        </div>

                        <div class="timeplayed" v-if="finishGameObject">
                            <p class="txt">Hra trvala</p>
                            <h2 class="number">{{ parseTimeToWord(game?.gameTime ?? 0) }}</h2>
                        </div>
                    </div>

                </div>

                <div class="chat">
                    <p>Chat</p>

                    <div class="chat-messages" v-cloak>
                        <div class="message" v-for="message in chatMessages" v-bind:class="{ mymsg: message.isMe }" v-bind:style="{ '--color': message.letter === 'X' ? 'var(--accent-color-secondary)' : 'var(--accent-color-primary)' }">
                            <p class="name">{{ message.sender }}</p>
                            <p class="text">{{ message.message }}</p>
                        </div>
                    </div>
                    <div class="chat-input">
                        <input type="text" maxlength="64" v-model="chatMessageInput" v-on:keyup.enter="sendMessageToMultiplayerChat(chatMessageInput, $event)" v-bind:placeholder="`Napiš zprávu jako ${accountName}...`"/>
                    </div>
                </div>
            </div>



            <!-- herní pole + controls -->
            <div class="flex" v-cloak v-bind:class="{  'fade-out': gameFadeOut, 'myturn': currentPlayer?.toLowerCase() === accountChar?.toLowerCase() }" v-show="gameLoaded" v-bind:style="{ '--mcolor': setPlayerColor(), '--hcolor': setPlayerColorHover() }">
                <div class="left">


                    <transition name="fade">
                        <div class="buttons" v-show="myTimeLeft !== null && game?.type === 'RANKED'">
                            <div class="timeleft">{{ parseTimeToDigital(myTimeLeft) }}</div>
                        </div>
                    </transition>

                    <div class="grid" v-bind:class="{ locked: game?.winner != null || gameLocked }">
                        <div class="cell" v-cloak v-for="(cell, i) in 15*15" v-on:click="updateCell($event.target, i)">
                            <div class="cellhover"></div>
                        </div>
                    </div>
                </div>

                <div class="right">
                    <div class="multiplayer-top">
                        <div class="top">
                            <div class="player-x" v-bind:class="{ active: String(game?.currentPlayer).toLowerCase() === 'x' }">
                                <div class="icon"></div>
                                <h1 class="name">{{ game?.playerX?.name }} {{ accountUUID === game?.playerX?.uuid ? '(ty)' : ''}}</h1>
                                <p class="time" v-if="game?.type === 'RANKED'">{{ parseTimeToDigital(playerXTimeLeft) }}</p>
                            </div>

                            <div class="player-o" v-bind:class="{ active: String(game?.currentPlayer).toLowerCase() === 'o' }">
                                <div class="icon"></div>
                                <h1 class="name">{{ game?.playerO?.name }} {{ accountUUID === game?.playerO?.uuid ? '(ty)' : ''}}</h1>
                                <p class="time" v-if="game?.type === 'RANKED'">{{ parseTimeToDigital(playerOTimeLeft) }}</p>
                            </div>
                        </div>

                        <div class="texts">
                            <p>Herní mód: <span v-cloak>{{ game?.type }}</span></p>
                            <p>Aktuální kolo: <span v-cloak>{{ game?.round + 1 }}.</span></p>
                            <p>Hra vytvořena: <span v-cloak>{{ (new Date(game?.createdAt)).toLocaleString('cs-CZ', { day: 'numeric', month: 'numeric', year: "numeric", hour: "numeric", minute: "numeric" }) }}</span></p>
                            <p>Poslední aktualizace: <span v-cloak>{{ (new Date(game?.updatedAt)).toLocaleString('cs-CZ', { day: 'numeric', month: 'numeric', year: "numeric", hour: "numeric", minute: "numeric" }) }}</span></p>
                            <p>Herní čas: <span v-cloak>{{ parseTimeToWord(gameTime ?? 0) }}</span></p>
                        </div>
                    </div>

                    <!-- chat -->
                    <div class="chat">
                        <p>Chat</p>

                        <div class="chat-messages" v-cloak>
                            <div class="message" v-for="message in chatMessages" v-bind:class="{ mymsg: message.isMe }" v-bind:style="{ '--color': message.letter === 'X' ? 'var(--accent-color-secondary)' : 'var(--accent-color-primary)' }">
                                <p class="name">{{ message.sender }}</p>
                                <p class="text">{{ message.message }}</p>
                            </div>
                        </div>
                        <div class="chat-input">
                            <input type="text" maxlength="64" v-model="chatMessageInput" v-on:keyup.enter="sendMessageToMultiplayerChat(chatMessageInput, $event)" v-bind:placeholder="`Napiš zprávu jako ${accountName}...`"/>

                            <div class="actions">
                                <div class="surrender" v-on:click="openModal('surrender')">
                                    <div class="icon" style="--mask: url('/images/icons/flag.svg')"></div>
                                    <p>Vzdát se</p>
                                </div>

                                <div class="suggestdraw" v-on:click="requestDraw()" v-bind:class="{ 'disabled': drawRequestSent, 'red': drawRequestReceived }">
                                    <div class="icon" style="--mask: url('/images/icons/handshake.svg')"></div>
                                    <p v-if="!drawRequestReceived">Navrhnout remízu</p>
                                    <p v-else>Přijmout remízu</p>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- varovani pokud se druhy hrac odpoji -->
                    <div class="player-disconnected-warn" v-show="gameLoaded && gameNumberOfPlayers < 2">
                        <p>Druhý hráč ztratil spojení.</p>
                    </div>
                </div>
            </div>
        </div>
        @await footerComponent
    </div>
</body>
<script>

</script>
<script type="module">
    import * as f from "/scripts/functions.js?ver=@Program.ENV.GetValueOrNull("CACHE_VERSION")";
    import { vue } from "/scripts/mpgame.js?ver=@Program.ENV.GetValueOrNull("CACHE_VERSION")";

    vue.accountUUID = "@loggedAccount?.UUID";
    vue.accountName = "@loggedAccount?.DisplayName";
    setTimeout(() => { // fake loading jen tak for fun aby to vypadalo pěkně
        vue.game = @Html.Raw(JsonSerializer.Serialize(game, new JsonSerializerOptions { WriteIndented = true, PropertyNamingPolicy = JsonNamingPolicy.CamelCase }));
        console.log(vue.game);
        vue.initializeGame(vue.game);
    }, 1150);

    window.addCookie = f.addCookie;
    setTimeout(() => {
        window.scroll({ top: 0, left: 0});
    }, 150);
    //console.warn(vue);
    if (window.history.replaceState) window.history.replaceState( null, null, window.location.href );
</script>
</html>