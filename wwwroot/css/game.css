header:not(.scrolled) {
  opacity: 0;
  pointer-events: none;
  transition-duration: 0.5s;
}

.background-f55288d9-4dcf-456d-87c4-26be60c16cdb {
  animation: appear 4s ease-in-out;
  animation-iteration-count: 1;
}
@keyframes appear {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
.background-f55288d9-4dcf-456d-87c4-26be60c16cdb:is(.fade-out) {
  animation: fade-out 1.5s ease-in;
  animation-iteration-count: 1;
  opacity: 0;
}
@keyframes fade-out {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

.mainsection {
  position: relative;
  height: calc(100vh + 80px);
}
@keyframes appear {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
.mainsection > .loading > .img {
  width: 250px;
  max-width: 90vw;
  aspect-ratio: 1/1;
  mask: url("/images/icons/zarivka_thinking_bile.svg") no-repeat center;
  mask-size: contain;
  background-color: var(--text-color);
  animation: loading-img-anim 3s ease-in-out infinite;
  margin: 0 auto;
}
@keyframes loading-img-anim {
  0% {
    transform: rotate(0deg);
  }
  20% {
    transform: rotate(-20deg);
  }
  60% {
    transform: rotate(20deg);
  }
  100% {
    transform: rotate(0deg);
  }
}
.mainsection > .loading p, .mainsection > .loading h1 {
  text-align: center;
  margin: 0 auto;
  max-width: 90vw;
}
.mainsection > .loading h1 {
  margin-top: 32px;
  margin-bottom: 8px;
}
.mainsection > .loading p {
  color: var(--color-gray);
}
.mainsection .flex {
  position: absolute;
  display: flex;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
  -moz-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  -o-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
  gap: 12px;
  align-content: start;
  margin-top: -40px;
  animation: appear 1s ease;
  animation-iteration-count: 1;
}
@keyframes appear {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
.mainsection .flex p::selection, .mainsection .flex span::selection, .mainsection .flex a::selection, .mainsection .flex h1::selection, .mainsection .flex h2::selection, .mainsection .flex input::selection, .mainsection .flex select::selection {
  background-color: var(--hcolor);
}
.mainsection .flex:is(.fade-out) {
  animation: fade-out 0.5s ease;
  animation-iteration-count: 1;
  opacity: 0;
}
@keyframes fade-out {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}
.mainsection .flex:is(.locked) > .left .grid {
  cursor: not-allowed;
  pointer-events: none;
}
.mainsection .flex:is(.locked) > .left .grid .cell {
  pointer-events: none;
}
.mainsection .flex:is(.locked) > .right {
  pointer-events: none;
}
.mainsection .flex > .left {
  transition-duration: 0.3s;
  padding: 24px;
  border-radius: 12px;
  background-color: var(--background-color);
  flex-grow: 1;
  border: 1px solid var(--background-color-primary);
}
.mainsection .flex > .left > .buttons {
  position: absolute;
  top: -26px;
}
.mainsection .flex > .left > .buttons > a {
  padding: 8px 24px;
  background-color: var(--background-color);
  color: var(--text-color);
  text-decoration: none;
  border-radius: 12px 12px 0 0;
  transition-duration: 0.3s;
  user-select: none;
}
.mainsection .flex > .left > .buttons > a:hover {
  background-color: var(--button-bg-hover);
  transition-duration: 0.3s;
}
.mainsection .flex > .left .grid {
  display: grid;
  grid-template-columns: repeat(15, 45px);
  grid-template-rows: repeat(15, 45px);
  gap: 0;
  width: fit-content;
  border-radius: 12px;
}
.mainsection .flex > .left .grid:is(.locked) {
  pointer-events: none !important;
  /*.cell {
      pointer-events: none !important;
  }*/
}
.mainsection .flex > .left .grid .cell {
  width: 45px;
  height: 45px;
  background-color: var(--button-bg);
  border-radius: 8px;
  border: 3px solid var(--background-color-primary);
  cursor: pointer;
  position: relative;
  transition-duration: 0.3s;
}
.mainsection .flex > .left .grid .cell:hover {
  background-color: var(--button-bg-hover);
}
.mainsection .flex > .left .grid .cell:is(.x), .mainsection .flex > .left .grid .cell:is(.o) {
  pointer-events: none;
  transition-duration: 0.3s;
}
.mainsection .flex > .left .grid .cell:is(.x):is(.winning-cell), .mainsection .flex > .left .grid .cell:is(.o):is(.winning-cell) {
  animation: dsadasasdsa 2s ease 1;
  animation-delay: 0.5s;
}
.mainsection .flex > .left .grid .cell:is(.x):is(.winning-cell)::after, .mainsection .flex > .left .grid .cell:is(.o):is(.winning-cell)::after {
  background-color: white;
}
@keyframes dsadasasdsa {
  0% {
    transform: scale(1);
    z-index: 2;
  }
  40% {
    transform: scale(1.5);
    z-index: 2;
  }
  60% {
    transform: scale(1.5);
    z-index: 2;
  }
  100% {
    transform: scale(1);
    z-index: 2;
  }
}
.mainsection .flex > .left .grid .cell:is(.x)::after, .mainsection .flex > .left .grid .cell:is(.o)::after {
  content: "";
  width: 100%;
  height: 100%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  mask: url("/images/icons/X_bile.svg") no-repeat center;
  mask-size: 60%;
  background: var(--accent-color-secondary);
  animation: xoappear 0.2s ease-out;
  transition-duration: 0.5s;
}
@keyframes xoappear {
  0% {
    transform: translate(-50%, -50%) scale(0);
  }
  100% {
    transform: translate(-50%, -50%) scale(1);
  }
}
.mainsection .flex > .left .grid .cell:is(.x)::after {
  mask-image: url("/images/icons/X_bile.svg");
  background: var(--accent-color-secondary);
}
.mainsection .flex > .left .grid .cell:is(.x):is(.winning-cell) {
  background-color: var(--accent-color-secondary);
}
.mainsection .flex > .left .grid .cell:is(.o)::after {
  mask-image: url("/images/icons/O_bile.svg");
  background: var(--accent-color-primary);
}
.mainsection .flex > .left .grid .cell:is(.o):is(.winning-cell) {
  background-color: var(--accent-color-primary);
}
.mainsection .flex > .right {
  display: flex;
  flex-direction: column;
  gap: 12px;
}
.mainsection .flex > .right > div {
  background-color: var(--background-color);
  border-radius: 12px;
  overflow: hidden;
}
.mainsection .flex > .right div:nth-child(1) {
  min-width: 320px;
}
.mainsection .flex > .right div:nth-child(1) > .top {
  padding: 24px;
  border-radius: 12px 12px 0 0;
  transition-duration: 0.3s;
  background-color: var(--mcolor);
  color: white;
}
.mainsection .flex > .right div:nth-child(1) > .top > .name {
  font-size: 24px;
  font-weight: 1000;
  max-width: 320px;
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
  width: 100%;
  text-align: center;
  margin: 0 auto;
}
.mainsection .flex > .right div:nth-child(1) > .top > .r {
  margin: 0 auto;
  font-size: 16px;
  width: max-content;
}
.mainsection .flex > .right div:nth-child(1) > .top > .r > span {
  font-weight: 1000;
}
.mainsection .flex > .right div:nth-child(1) > .texts {
  padding: 24px;
  border-radius: 0 0 12px 12px;
  background-color: var(--background-color);
  transition-duration: 0.3s;
}
.mainsection .flex > .right div:nth-child(1) > .texts > p {
  margin: 0;
  font-size: 16px;
}
.mainsection .flex > .right div:nth-child(1) > .texts > p > span {
  font-weight: 700;
  font-size: 18px;
}
.mainsection .flex > .right > .settings {
  padding: 24px;
  gap: 24px;
  display: flex;
  flex-direction: column;
  transition-duration: 0.3s;
}
.mainsection .flex > .right > .settings > h2 {
  margin: 0;
  font-size: 24px;
}
.mainsection .flex > .right > .settings > .pair {
  display: flex;
  flex-direction: column;
  gap: 6px;
}
.mainsection .flex > .right > .settings > .pair > p {
  margin: 0;
  font-weight: 600;
}
.mainsection .flex > .right > .settings > .pair > input, .mainsection .flex > .right > .settings > .pair > select {
  width: 100%;
}
.mainsection .flex > .right > .settings > .buttons {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
}
.mainsection .flex > .right > .settings > .buttons > button {
  flex-grow: 1;
}
.mainsection .flex > .right > .presettings {
  padding: 24px;
  gap: 8px;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
}
.mainsection .flex > .right > .presettings > button {
  width: 120px;
}

@media screen and (min-width: 1100px) and (max-width: 1600px) {
  .mainsection .flex > .left .grid {
    grid-template-columns: repeat(15, 38px);
    grid-template-rows: repeat(15, 38px);
  }
  .mainsection .flex > .left .grid > .cell {
    width: 38px;
    height: 38px;
    border-radius: 6px;
    border-width: 2.5px;
  }
}
@media screen and (min-width: 735px) and (max-width: 1100px) {
  .mainsection {
    height: auto;
    min-height: 100vh;
    padding-bottom: 160px;
  }
  .mainsection > .flex {
    flex-direction: column-reverse;
    position: relative;
    top: calc(5vh + 40px);
    margin: 0 auto;
    width: 90vw;
    left: unset;
    transform: unset;
  }
  .mainsection > .flex > .left {
    border-bottom: 12px solid var(--mcolor);
  }
  .mainsection > .flex > .left > .buttons > a {
    background-color: var(--mcolor);
    color: white;
  }
  .mainsection > .flex > .left > .buttons > a:hover {
    background-color: var(--text-color);
    color: var(--bg);
  }
  .mainsection > .flex > .left .grid {
    margin: 0 auto;
    grid-template-columns: repeat(15, 5.3vw);
    grid-template-rows: repeat(15, 5.3vw);
  }
  .mainsection > .flex > .left .grid .cell {
    width: 5.3vw;
    height: 5.3vw;
    border-width: 0.3vw;
    border-radius: 1.2vw;
  }
  .mainsection > .flex > .right {
    flex-direction: row;
  }
  .mainsection > .flex > .right > div {
    flex-grow: 1;
  }
  .mainsection > .flex > .right div:nth-child(1) > .top > .name {
    max-width: 420px;
  }
  .mainsection > .flex > .right .settings {
    min-width: 300px;
  }
}
@media screen and (max-width: 735px) {
  .mainsection {
    height: auto;
    min-height: 100vh;
    padding-bottom: 160px;
  }
  .mainsection > .flex {
    flex-direction: column-reverse;
    position: relative;
    top: calc(5vh + 40px);
    margin: 0 auto;
    width: 90vw;
    left: unset;
    transform: unset;
  }
  .mainsection > .flex > .left {
    border-bottom: 12px solid var(--mcolor);
  }
  .mainsection > .flex > .left > .buttons > a {
    background-color: var(--mcolor);
    color: white;
  }
  .mainsection > .flex > .left > .buttons > a:hover {
    background-color: var(--text-color);
    color: var(--bg);
  }
  .mainsection > .flex > .left .grid {
    margin: 0 auto;
    grid-template-columns: repeat(15, 5vw);
    grid-template-rows: repeat(15, 5vw);
    pointer-events: none;
  }
  .mainsection > .flex > .left .grid .cell {
    width: 5vw;
    height: 5vw;
    border-width: 0.3vw;
    border-radius: 1.2vw;
  }
  .mainsection > .flex > .left:has(.grid:not(.locked)):active, .mainsection > .flex > .left:has(.grid:not(.locked)):hover {
    overflow: auto;
    aspect-ratio: 1/1;
  }
  .mainsection > .flex > .left:has(.grid:not(.locked)):active .grid, .mainsection > .flex > .left:has(.grid:not(.locked)):hover .grid {
    margin: 0 auto;
    grid-template-columns: repeat(15, 9vw);
    grid-template-rows: repeat(15, 9vw);
    pointer-events: all;
    animation: templockpoaiswdjsiaasoidj 1s;
  }
  .mainsection > .flex > .left:has(.grid:not(.locked)):active .grid:is(.locked), .mainsection > .flex > .left:has(.grid:not(.locked)):hover .grid:is(.locked) {
    pointer-events: none !important;
  }
  @keyframes templockpoaiswdjsiaasoidj {
    from {
      pointer-events: none;
    }
    to {
      pointer-events: all;
    }
  }
  .mainsection > .flex > .left:has(.grid:not(.locked)):active .grid .cell, .mainsection > .flex > .left:has(.grid:not(.locked)):hover .grid .cell {
    width: 9vw;
    height: 9vw;
    border-width: 0.6vw;
    border-radius: 2vw;
  }
  .mainsection > .flex > .right div:nth-child(1) > .top > .name {
    max-width: none;
  }
}

/*# sourceMappingURL=game.css.map */
